name: CI Pipeline

on:
  push:
    branches:
      - github_actions
  pull_request:
    branches:
      - github_actions
  workflow_dispatch:

env:
  weather_api: ${{ secrets.WEATHER_API }}
  api_key: ${{ secrets.GSPREAD_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

  test_connection:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Configure Secrets
        run: |
          echo "${{ secrets.GSPREAD_KEY }}" | base64 -d > gspread-key.json
          echo "${{ secrets.WEATHER_API }}" | base64 -d > weather_api.json

      - name: Run Test for Successful Worksheet Creation
        run: pytest -v -k test_for_successful_worksheet_creation

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
        
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Configure Secrets
        run: |
          echo "${{ secrets.GSPREAD_KEY }}" | base64 -d > gspread-key.json
          echo "${{ secrets.WEATHER_API }}" | base64 -d > weather_api.json

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Test for Column Names
        run: pytest -v -k test_for_column_names

      - name: Run Test for Column Datatypes
        run: pytest -v -k test_for_column_datatypes

      - name: Run Test for Data Validation
        run: pytest -v -k test_for_data_validation

  test_coverage:
    needs: [test_connection, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Check Test Coverage
        run: pytest test_main.py --cov-config=.coveragerc --cov=main
